id: nyc_taxi
namespace: de-zoomcamp
description: |
  The CSV Data used in the course: https://github.com/DataTalksClub/nyc-tlc-data/releases

inputs:
  - id: taxi
    type: SELECT
    displayName: Select taxi type
    values: [green]
    defaults: green

  - id: year
    type: SELECT
    displayName: Select year
    values: ["2019", "2020", "2021"]
    defaults: "2019"

  - id: month
    type: MULTISELECT
    displayName: Select month
    values: ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"]
    defaults: ["01"]

variables:
  file: "{{inputs.taxi}}_tripdata_{{inputs.year}}-{{taskrun.value}}.csv"
  staging_table: "DEZ.{{inputs.taxi}}_tripdata_staging"
  table: "DEZ.{{inputs.taxi}}_tripdata"
  data: "{{outputs.extract[taskrun.value].outputFiles[inputs.taxi ~ '_tripdata_' ~ inputs.year ~ '-' ~ taskrun.value ~ '.csv']}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{inputs.taxi}}_tripdata_{{inputs.year}}-{{inputs.month}}.csv"
      taxi: "{{inputs.taxi}}"

  - id: green_create_table
    type: io.kestra.plugin.jdbc.postgresql.Queries
    sql: |
      CREATE SCHEMA IF NOT EXISTS DEZ;

      CREATE TABLE IF NOT EXISTS {{render(vars.table)}} (
          id                     text,
          VendorID               text,
          lpep_pickup_datetime   timestamp,
          lpep_dropoff_datetime  timestamp,
          store_and_fwd_flag     text,
          RatecodeID             text,
          PULocationID           text,
          DOLocationID           text,
          passenger_count        integer,
          trip_distance          double precision,
          fare_amount            double precision,
          extra                  double precision,
          mta_tax                double precision,
          tip_amount             double precision,
          tolls_amount           double precision,
          ehail_fee              double precision,
          improvement_surcharge  double precision,
          total_amount           double precision,
          payment_type           integer,
          trip_type              integer,
          congestion_surcharge   double precision
      );

      CREATE TABLE IF NOT EXISTS {{render(vars.staging_table)}} (
          VendorID               text,
          lpep_pickup_datetime   timestamp,
          lpep_dropoff_datetime  timestamp,
          store_and_fwd_flag     text,
          RatecodeID             text,
          PULocationID           text,
          DOLocationID           text,
          passenger_count        integer,
          trip_distance          double precision,
          fare_amount            double precision,
          extra                  double precision,
          mta_tax                double precision,
          tip_amount             double precision,
          tolls_amount           double precision,
          ehail_fee              double precision,
          improvement_surcharge  double precision,
          total_amount           double precision,
          payment_type           integer,
          trip_type              integer,
          congestion_surcharge   double precision
      );
  
  - id: green_truncate_staging_table
    type: io.kestra.plugin.jdbc.postgresql.Queries
    sql: |
      TRUNCATE TABLE {{render(vars.staging_table)}};

  - id: multiextraction
    type: io.kestra.plugin.core.flow.ForEach
    concurrencyLimit: 0
    values: "{{inputs.month}}"
    tasks:
      - id: extract
        type: io.kestra.plugin.scripts.shell.Commands
        outputFiles:
          - "*.csv"
        taskRunner:
          type: io.kestra.plugin.core.runner.Process
        commands:
          - wget -qO- https://github.com/DataTalksClub/nyc-tlc-data/releases/download/{{inputs.taxi}}/{{render(vars.file)}}.gz | gunzip > {{render(vars.file)}}

  - id: multiloader
    type: io.kestra.plugin.core.flow.ForEach
    concurrencyLimit: 0
    values: "{{inputs.month}}"
    tasks:
      - id: green_copy_in_to_staging_table
        type: io.kestra.plugin.jdbc.postgresql.CopyIn
        format: CSV
        from: "{{render(vars.data)}}"
        table: "{{render(vars.staging_table)}}"
        header: true
        columns: [VendorID,lpep_pickup_datetime,lpep_dropoff_datetime,store_and_fwd_flag,RatecodeID,PULocationID,DOLocationID,passenger_count,trip_distance,fare_amount,extra,mta_tax,tip_amount,tolls_amount,ehail_fee,improvement_surcharge,total_amount,payment_type,trip_type,congestion_surcharge]

  - id: green_merge_data
    type: io.kestra.plugin.jdbc.postgresql.Query
    sql: |
      INSERT INTO {{render(vars.table)}} (
        id, VendorID, lpep_pickup_datetime, lpep_dropoff_datetime,
        store_and_fwd_flag, RatecodeID, PULocationID, DOLocationID, passenger_count,
        trip_distance, fare_amount, extra, mta_tax, tip_amount, tolls_amount, ehail_fee,
        improvement_surcharge, total_amount, payment_type, trip_type, congestion_surcharge
      )
      SELECT
        md5(
          COALESCE(CAST(S.VendorID AS text), '') ||
          COALESCE(CAST(S.lpep_pickup_datetime AS text), '') || 
          COALESCE(CAST(S.lpep_dropoff_datetime AS text), '') || 
          COALESCE(S.PULocationID, '') || 
          COALESCE(S.DOLocationID, '') || 
          COALESCE(CAST(S.fare_amount AS text), '') || 
          COALESCE(CAST(S.trip_distance AS text), '')     
        ), S.VendorID, S.lpep_pickup_datetime, S.lpep_dropoff_datetime,
          S.store_and_fwd_flag, S.RatecodeID, S.PULocationID, S.DOLocationID, S.passenger_count,
          S.trip_distance, S.fare_amount, S.extra, S.mta_tax, S.tip_amount, S.tolls_amount, S.ehail_fee,
          S.improvement_surcharge, S.total_amount, S.payment_type, S.trip_type, S.congestion_surcharge
      FROM {{render(vars.staging_table)}} S
  
  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: This will remove output files. If you'd like to explore Kestra outputs, disable it.

pluginDefaults:
  - type: io.kestra.plugin.jdbc.postgresql
    values:
      url: jdbc:postgresql://postgres:5432/kestra
      username: kestra
      password: k3str4